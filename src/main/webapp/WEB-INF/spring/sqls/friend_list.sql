DROP SEQUENCE FRIEND_LIST_SEQ;
DROP TABLE FRIEND_LIST;

CREATE SEQUENCE FRIEND_LIST_SEQ;

CREATE TABLE FRIEND_LIST(
	FRIEND_NO NUMBER NOT NULL,
	USER_NO NUMBER NOT NULL,
	STATUS VARCHAR2(500) NOT NULL, -- CONSTRAINT CHECK ADD? / STAUTS 예약어는 아닌데 파랗게 뜸...
	CONSTRAINT FRIEND_LIST_UN_FK FOREIGN KEY(USER_NO) REFERENCES USER_INFO(USER_NO),
	CONSTRAINT FRIEND_LIST_FN_FK FOREIGN KEY(FRIEND_NO) REFERENCES USER_INFO(USER_NO),
	CONSTRAINT FRIEND_STATUS_CK CHECK(STATUS IN ('SEND','RESP','DENY','ACCEPT','BLOCK'))
);

---
INSERT INTO FRIEND_LIST
VALUES(2,3,'ACCEPT');

INSERT INTO FRIEND_LIST
VALUES(3,2,'ACCEPT');

INSERT INTO FRIEND_LIST
VALUES(3,4,'ACCEPT');

INSERT INTO FRIEND_LIST
VALUES(4,3,'ACCEPT');

INSERT INTO FRIEND_LIST
VALUES(5,3,'ACCEPT');

INSERT INTO FRIEND_LIST
VALUES(3,5,'ACCEPT');

INSERT INTO FRIEND_LIST
VALUES(5,2,'ACCEPT');

INSERT INTO FRIEND_LIST
VALUES(2,5,'ACCEPT');

INSERT INTO FRIEND_LIST
VALUES(9,2,'ACCEPT');

INSERT INTO FRIEND_LIST
VALUES(2,9,'ACCEPT');

SELECT *
FROM FRIEND_LIST;

SELECT *
FROM FRIEND_LIST
WHERE USER_NO=2;

Delete from FRIEND_LIST where STATUS = 'SEND'

DELETE FROM FRIEND_LIST WHERE FRIEND_NO=1 AND USER_NO = 9;
DELETE FROM FRIEND_LIST WHERE FRIEND_NO=9 AND USER_NO = 1;

--나와 친구
SELECT fl.FRIEND_NO
			FROM FRIEND_LIST fl
			JOIN FRIEND_LIST fl2
			ON fl.FRIEND_NO = fl2.USER_NO
			AND fl.USER_NO = fl2.FRIEND_NO
			WHERE fl.USER_NO = 2

			
		SELECT fl.FRIEND_NO , fl.STATUS , ui.USER_NO, ui.USER_ID ,ui.USER_NAME,
			 ui.USER_PHOTO, ui.USER_ACTIVE
		FROM FRIEND_LIST fl JOIN USER_INFO ui ON ui.USER_NO = fl.USER_NO
		WHERE fl.FRIEND_NO =(
			SELECT ui.USER_NO
			FROM USER_INFO ui
			WHERE ui.USER_NO = 2)
			
			
--나와 친구 아님
		SELECT ui.USER_NO, ui.USER_NAME
		FROM USER_INFO ui
		WHERE USER_NO != 2
		AND USER_NO 
		NOT IN(
			SELECT fl.FRIEND_NO
			FROM FRIEND_LIST fl
			JOIN FRIEND_LIST fl2
			ON fl.FRIEND_NO = fl2.USER_NO
			AND fl.USER_NO = fl2.FRIEND_NO
			WHERE fl.USER_NO = 2)
			
	